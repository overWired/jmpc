buildscript {

	ext.versions = [
	   gradle: '3.3',
	   springBoot: '1.5.2.RELEASE',
	   springCloudDependencies: 'Camden.RELEASE'
    ]

	ext.requiredRepositories = {
		mavenCentral()
	}

    repositories(requiredRepositories)

	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${versions.springBoot}")
    }

}

plugins { id "io.spring.dependency-management" version "1.0.0.RELEASE" }


allprojects {
    apply plugin: 'eclipse'
}

subprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories(requiredRepositories)

    apply plugin: 'io.spring.dependency-management'
    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${versions.springBoot}")
        }
    }

    dependencies {
        compile('org.springframework.boot:spring-boot-starter')
        compile('org.springframework.boot:spring-boot-starter-cache')
        compileOnly('org.projectlombok:lombok')
        testCompile('org.springframework.boot:spring-boot-starter-test')
    }

}


/**
 * Allows gradle to packaged as part of the build.  This generates infrastructure files to be committed once.
 * Then the build itself will use (or download) the correct version of gradle.
 */
task wrapper(type: Wrapper) {
    gradleVersion = versions.gradle
    distributionUrl = distributionUrl.replaceAll('-bin', '-all')
}
