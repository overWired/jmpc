buildscript {

    ext.versions = [
            commonsCollections4    : '4.1',
            commonsLang3           : '3.5',
            gradle                 : '3.3',
            guava                  : '21.0',
            javaMpd                : '6.0.0', //'5.0.3',
            springBoot             : '1.5.2.RELEASE',
            springCloudDependencies: 'Camden.RELEASE'
    ]

    ext.libraries = [
            commonsCollections4   : "org.apache.commons:commons-collections4:${versions.commonsCollections4}",
            commmonsLang3         : "org.apache.commons:commons-lang3:${versions.commonsLang3}",
            groovy                : 'org.codehaus.groovy:groovy-all', /* version managed by Spring Boot */
            guava                 : "com.google.guava:guava:${versions.guava}",
            javaMpd               : "net.thejavashop:javampd:${versions.javaMpd}",
            lombok                : 'org.projectlombok:lombok',
            springBootDevTools    : 'org.springframework.boot:spring-boot-devtools',
            springBootStarter     : 'org.springframework.boot:spring-boot-starter',
            springBootStarterCache: 'org.springframework.boot:spring-boot-starter-cache',
            springBootStarterTest : 'org.springframework.boot:spring-boot-starter-test',
            springContext         : 'org.springframework:spring-context'
    ]

    ext.requiredRepositories = {
        mavenLocal()
        mavenCentral()
    }

    repositories(requiredRepositories)

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${versions.springBoot}")
    }

}

plugins { id "io.spring.dependency-management" version "1.0.0.RELEASE" }


allprojects {
    defaultTasks 'assemble'
}

subprojects {
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    repositories(requiredRepositories)

    apply plugin: 'io.spring.dependency-management'
    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${versions.springBoot}")
        }
    }

    dependencies {
        compile(libraries.commonsCollections4,
                libraries.commmonsLang3,
                libraries.guava,
                libraries.springBootStarter,
                libraries.springBootStarterCache,
                libraries.springContext
        )

        compileOnly(libraries.lombok)

        testCompile(libraries.springBootStarterTest)
    }

}

/**
 * Allows gradle to packaged as part of the build.  This generates infrastructure files to be committed once.
 * Then the build itself will use (or download) the correct version of gradle.
 */
task wrapper(type: Wrapper) {
    gradleVersion = versions.gradle
    distributionUrl = distributionUrl.replaceAll('-bin', '-all')
}
